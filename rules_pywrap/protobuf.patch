diff --git a/BUILD.bazel b/BUILD.bazel
--- a/BUILD.bazel	(revision 90b73ac3f0b10320315c2ca0d03a5a9b095d2f66)
+++ b/BUILD.bazel	(date 1741994163620)
@@ -15,6 +15,7 @@
     "internal_protobuf_py_tests",
     "py_proto_library",
 )
+load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
 
 licenses(["notice"])
 
@@ -24,6 +25,19 @@
 # Protobuf Runtime Library
 ################################################################################
 
+bool_flag(
+    name = "use_dlls",
+    build_setting_default = False,
+    visibility = ["//visibility:public"],
+)
+
+config_setting(
+    name = "enable_use_dlls",
+    flag_values = {
+        ":use_dlls": "True",
+    },
+)
+
 cc_library(
     name = "protobuf_lite",
     srcs = [
@@ -68,6 +82,14 @@
     copts = COPTS,
     includes = ["src/"],
     linkopts = LINK_OPTS,
+    local_defines = select({
+        ":enable_use_dlls": [
+            "PROTOBUF_USE_DLLS",
+            "LIBPROTOBUF_EXPORTS",
+        ],
+        "//conditions:default": [],
+    }),
+    alwayslink = 1,
     visibility = ["//visibility:public"],
 )
 
@@ -135,6 +157,14 @@
     copts = COPTS,
     includes = ["src/"],
     linkopts = LINK_OPTS,
+    local_defines = select({
+        ":enable_use_dlls": [
+            "PROTOBUF_USE_DLLS",
+            "LIBPROTOBUF_EXPORTS",
+        ],
+        "//conditions:default": [],
+    }),
+    alwayslink = 1,
     visibility = ["//visibility:public"],
     deps = [":protobuf_lite"] + select({
         "//build_defs:config_msvc": [],
@@ -1074,7 +1104,8 @@
         "@com_google_protobuf//:type_proto",
         "@com_google_protobuf//:wrappers_proto",
     ],
-    command_line = "--cpp_out=$(OUT)",
+    command_line = "--cpp_out=dllexport_decl=PROTOBUF_EXPORT:$(OUT)",
+#    command_line = "--cpp_out=$(OUT)",
     runtime = ":protobuf",
     visibility = ["//visibility:public"],
 )
diff --git a/protobuf.bzl b/protobuf.bzl
--- a/protobuf.bzl	(revision 90b73ac3f0b10320315c2ca0d03a5a9b095d2f66)
+++ b/protobuf.bzl	(date 1714611573270)
@@ -127,7 +127,7 @@
         use_grpc_plugin = (ctx.attr.plugin_language == "grpc" and ctx.attr.plugin)
         path_tpl = "$(realpath %s)" if in_gen_dir else "%s"
         if ctx.attr.gen_cc:
-            args += [("--cpp_out=" + path_tpl) % gen_dir]
+            args += [("--cpp_out=dllexport_decl=PROTOBUF_EXPORT:" + path_tpl) % gen_dir]
             outs.extend(_CcOuts([src.basename], use_grpc_plugin = use_grpc_plugin))
         if ctx.attr.gen_py:
             args += [("--python_out=" + path_tpl) % gen_dir]
